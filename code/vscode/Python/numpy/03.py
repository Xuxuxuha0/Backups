import numpy as np

"""
list的切片会生成新的变量,不改变原数据
numpy的切片不会,所以会修改原来的数据
"""


"""
二维切片
可以使用...
a:
1 2 3
4 5 6
7 8 9
1 5 9
"""
a = np.array(
    [
        [1, 2, 3],
        [4, 5, 6],
        [7, 8, 9],
        [1, 5, 9],
    ]
)
z = a.copy()  # 生成新变量
z = np.array(a)  # 等价于上者

b = a[..., 2]  # 所有行，下标为2的列；一维
c = a[..., 2:]  # 所有行，下标2开始所有列；二维，仍保留原来的行列关系
x = a[1, 2]  # a[1,2]==a[1][2]
d = a[...][1]  # a[...][1]==a[1]；解释：a[...]是取出所有行，每个行作为一个变量，再[1]表示取下标为1的变量

e = a[[0, 1, 2], [0, 1, 0]]  # 取对应的索引：(0,0)(1,1)(2,0)
print(e)

f = a[1:3, 0:3]  # 1:3==[1,2]
print(f)
# :方法是切片法
# []是列举法,缺点：前后一定要一一对应


"""
布尔索引
&和
|或
"""
a[a % 2 == 1] = -1  # 让所有奇数修改为-1
print(a, "\n", "-------------------------")
g = a[a > 5]  # 返回所有大于5的元素
h = a[(a > 2) & (a < 5)]

row = np.array([False, False, True, True])  # 临时变量，True表示要该行
i = a[row]
colum = np.array([True, True, False])
j = a[:, colum]  # 行全都要，列按照colum切片；等价于a[:,[0,1]]  而 ：又可以换成...
print(j)
